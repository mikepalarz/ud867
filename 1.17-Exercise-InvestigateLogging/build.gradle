/*

In this series of exercises you'll be exploring how Gradle handles various
logging outputs during the build process. We'll look at how to add logging
statements to your build as well as how to use the various command line
options to adjust the amount of logging output we receive.

Exercises:

1. Add logging statements at the beginning and end of the task action for
   the HelloTask at the INFO level.
2. Execute the "hello" task with the appropriate command line options such
   that our newly added logging statements are shown in the console output.
3. Modify the `println()` call in our task action to instead be a logging
   statement at the LIFECYCLE level.
4. Execute the "hello" task and confirm the output.
5. Execute the "hello" task with the appropriate command line options such
   that the text "Hello World" is no longer written to the console output.
6. Uncomment and run the "derpy" task below, then use "--stacktrace" to find
   the error.
7. CHALLENGE! Log "Catch me if you can" at DEBUG level, then use grep (or
    findstr on Windows) to find that message in the logs.

*/

task hello(type: HelloTask)

class HelloTask extends DefaultTask {
    
    @TaskAction
    void doAction() {
        logger.info('Before the print statement is executed')	
        logger.lifecycle('Hello World')
    	logger.info('After the print statement is executed')	
    }
}

logger.debug('Catch me if you can!')


// The error message was the following:
// Caused by: org.gradle.internal.metaobject.AbstractDynamicObject$CustomMessageMissingMethodException: Could not find method primp() for arguments [Herp de derp] on task ':derpy' of type org.gradle.api.DefaultTask.

/*
task derpy << {
    primp "Herp de derp"
}
*/

// CHALLENGE Solution:
// The command line arguments that I used are as follows:
// gradle --debug hello | grep "Catch me if you can"

// Quiz question solution
// In order to extract the relevant println statement, I used the following in the command line:
// gradle --debug hello2 | grep "Hello world!"

task hello2{
	doLast{
		println 'Hello world!'
	}
}
