/*

In this series of exercises you'll be exploring the Gradle build lifecycle.
Using the build script provided, you'll execute a number of tasks and observe
the output to better understand how Gradle evaluates build script logic.

Exercises:

1. Execute the "help" task and observe the output.
2. Execute the "first" task and observe the output.
3. Execute the "second" task and observe the output.

*/

println 'First top level script element'

task first {
    println 'First task: Configuration'

    doLast {
        println 'First task: Action'
    }
}

task second(dependsOn: first) {
    println 'Second task: Configuration'

    doLast {
        println 'Second task: Action'
    }
}

println 'Second top level script element'

/*
* 
* 1. Output of running the "help" task:
* 
* First top level script element
* First task: Configuration
* Second task: Configuration
* Second top level script element
* :help
* 
* Welcome to Gradle 4.4.
* 
* To run a build, run gradle <task> ...
* 
* To see a list of available tasks, run gradle tasks
* 
* To see a list of command-line options, run gradle --help
* 
* To see more detail about a task, run gradle help --task <task>
* 
* BUILD SUCCESSFUL in 0s
* 1 actionable task: 1 executed
* 
*/

/*
*
* 2. Output of running the "first" task:
*
* First top level script element
* First task: Configuration
* Second task: Configuration
* Second top level script element
* :first
* First task: Action
* 
* BUILD SUCCESSFUL in 0s
* 1 actionable task: 1 executed
* 
*/

/*
* 
* 3. Output of running the "second" task:
* 
* First top level script element
* First task: Configuration
* Second task: Configuration
* Second top level script element
* :first
* First task: Action
* :second
* Second task: Action
* 
* BUILD SUCCESSFUL in 1s
* 2 actionable tasks: 2 executed
* 
*/

